image: python:3.10

variables:
    GIT_DEPTH: 1

stages:
    - test
    - release
    - pre_release


pytest:
    image: dmanthing/multi-python
    script:
        - curl -sSL https://install.python-poetry.org | python3 -
        - export PATH="/root/.local/bin:$PATH"
        - poetry install --with dev
        - tox
    stage: test
    rules:
      - if: '$CI_COMMIT_TAG == null'

# Basic job to upload the newly tagged version of mosaik to pypi. The server can be chosen, i.e., the test or production server.
.pypi:
  artifacts:
    paths:
      - dist/*.whl
  variables:
    TWINE_USERNAME: $MOSAIK_PYPI_USER
    TWINE_PASSWORD: $MOSAIK_PYPI_PASSWORD
  before_script:
    - echo 'version name is = '
    - echo ${CI_COMMIT_TAG}
    - echo ${CI_COMMIT_REF_NAME}
    - apt-get install curl
    - curl -sSL https://install.python-poetry.org | python3 -
    - export PATH="/root/.local/bin:$PATH"
    - poetry config repositories.pypi $REPOSITORY_URL
    - echo $MOSAIK_PYPI_USER
    - poetry config pypi-token.pypi $MOSAIK_PYPI_PASSWORD
  script:
    - poetry build
    - poetry publish
  stage: release
  only:
    - tags
  when: manual

# Release the newly tagged version of mosaik-heatpump on the test instance of pypi.
pypi_test:
  extends: .pypi
  stage: pre_release
  variables:
    REPOSITORY_URL: https://test.pypi.org/legacy/
    TWINE_PASSWORD: $MOSAIK_TEST_PYPI_TOKEN

# Release the newly tagged version of mosaik-heatpump on pypi.
pypi_release:
  extends: .pypi
  stage: release
  variables:
    REPOSITORY_URL: https://upload.pypi.org/legacy/
